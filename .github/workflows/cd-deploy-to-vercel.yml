name: 'CD: Deploy to Vercel'

on:
  push:
    branches:
      - main
      - staging-*
    tags:
      - 'v*.*.*'

env:
  APP_NAME: ${{ vars.APP_NAME }}
  DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
  DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
  DOMAIN_PRODUCTION: ${{ vars.DOMAIN_PRODUCTION }}
  DOMAIN_STAGING: ${{ vars.DOMAIN_STAGING }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_SCOPE: ${{ secrets.VERCEL_SCOPE }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/cache-dependencies
      - name: Notify job status
        if: always()
        uses: './.github/actions/notify-job-status'
        with:
          title: 'CD: Deploy to  Vercel -> Install dependencies'
          webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          notify_when: failure_only

  lint:
    name: Lint
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cache-dependencies
      - name: Lint
        run: bun run lint .
      - name: Notify job status
        if: always()
        uses: './.github/actions/notify-job-status'
        with:
          title: 'CD: Deploy to  Vercel -> Lint'
          webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          notify_when: failure_only

  test:
    name: Test
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cache-dependencies
      - name: Test
        run: bun run test:coverage
      - name: Notify job status
        if: always()
        uses: './.github/actions/notify-job-status'
        with:
          title: 'CD: Deploy to  Vercel -> Test'
          webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          notify_when: failure_only

  # TODO: uncomment when needed
  # deploy-staging:
  #   name: Deploy to Staging
  #   runs-on: ubuntu-latest
  #   needs:
  #     - install-dependencies
  #     - lint
  #     - test
  #   if: |
  #     github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/staging-')
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Notify deployment started
  #       uses: './.github/actions/notify-deployment-started'
  #       with:
  #         title: ${{ env.APP_NAME }} Staging
  #         webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
  #     - name: Install dependencies
  #       uses: ./.github/actions/cache-dependencies
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #     - name: Deploy to Staging
  #       id: deploy
  #       run: |
  #         vercel deploy --token $VERCEL_TOKEN --skip-domain >deployment-url.txt 2>deployment-error.txt
  #         cat deployment-url.txt
  #         cat deployment-error.txt
  #         DEPLOYMENT_URL=`cat deployment-url.txt`
  #         echo "DEPLOYMENT_URL" $DEPLOYMENT_URL
  #         echo "DOMAIN_STAGING" $DOMAIN_STAGING
  #         vercel alias $DEPLOYMENT_URL $DOMAIN_STAGING --token $VERCEL_TOKEN --scope $VERCEL_SCOPE
  #     - name: Notify deployment status
  #       if: always()
  #       uses: './.github/actions/notify-deployment-status'
  #       with:
  #         title: ${{ env.APP_NAME }} Staging
  #         webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
  #         resultUrl: 'https://${{ env.DOMAIN_STAGING }}'
  #         status: ${{ job.status }}
  #         notify_when: always

  # deploy-production:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs:
  #     - install-dependencies
  #     - lint
  #     - test
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Notify deployment started
  #       uses: './.github/actions/notify-deployment-started'
  #       with:
  #         title: ${{ env.APP_NAME }} Production
  #         webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
  #     - name: Install dependencies
  #       uses: ./.github/actions/cache-dependencies
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #     - name: Deploy to Production
  #       id: deploy
  #       run: |
  #         vercel deploy --token $VERCEL_TOKEN --prod --skip-domain >deployment-url.txt 2>deployment-error.txt
  #         cat deployment-url.txt
  #         cat deployment-error.txt
  #         DEPLOYMENT_URL=`cat deployment-url.txt`
  #         echo "DEPLOYMENT_URL" $DEPLOYMENT_URL
  #         echo "DOMAIN_PRODUCTION" $DOMAIN_PRODUCTION
  #         vercel alias $DEPLOYMENT_URL $DOMAIN_PRODUCTION --token $VERCEL_TOKEN --scope $VERCEL_SCOPE
  #     - name: Notify deployment status
  #       if: always()
  #       uses: './.github/actions/notify-deployment-status'
  #       with:
  #         title: ${{ env.APP_NAME }} Production
  #         webhookUrl: ${{ env.DISCORD_WEBHOOK_URL }}
  #         resultUrl: 'https://${{ env.DOMAIN_PRODUCTION }}'
  #         status: ${{ job.status }}
  #         notify_when: always
